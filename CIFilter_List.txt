2014-04-02 15:44:59.265 coreImage_sketchDebug[6550:303] (
    CIAdditionCompositing,
    CIAffineClamp,
    CIAffineTile,
    CIAffineTransform,
    CIAreaAverage,
    CIAreaHistogram,
    CIAreaMaximum,
    CIAreaMaximumAlpha,
    CIAreaMinimum,
    CIAreaMinimumAlpha,
    CIBarsSwipeTransition,
    CIBlendWithMask,
    CIBloom,
    CIBoxBlur,
    CIBumpDistortion,
    CIBumpDistortionLinear,
    CICheckerboardGenerator,
    CICircleSplashDistortion,
    CICircularScreen,
    CICircularWrap,
    CICMYKHalftone,
    CIColorBlendMode,
    CIColorBurnBlendMode,
    CIColorControls,
    CIColorCube,
    CIColorDodgeBlendMode,
    CIColorInvert,
    CIColorMap,
    CIColorMatrix,
    CIColorMonochrome,
    CIColorPosterize,
    CIComicEffect,
    CIConstantColorGenerator,
    CICopyMachineTransition,
    CICrop,
    CICrystallize,
    CIDarkenBlendMode,
    CIDepthOfField,
    CIDifferenceBlendMode,
    CIDiscBlur,
    CIDisintegrateWithMaskTransition,
    CIDisplacementDistortion,
    CIDissolveTransition,
    CIDotScreen,
    CIDroste,
    CIEdges,
    CIEdgeWork,
    CIEightfoldReflectedTile,
    CIExclusionBlendMode,
    CIExposureAdjust,
    CIFalseColor,
    CIFlashTransition,
    CIFourfoldReflectedTile,
    CIFourfoldRotatedTile,
    CIFourfoldTranslatedTile,
    CIGammaAdjust,
    CIGaussianBlur,
    CIGaussianGradient,
    CIGlassDistortion,
    CIGlassLozenge,
    CIGlideReflectedTile,
    CIGloom,
    CIHardLightBlendMode,
    CIHatchedScreen,
    CIHeightFieldFromMask,
    CIHexagonalPixellate,
    CIHighlightShadowAdjust,
    CIHistogramDisplayFilter,
    CIHoleDistortion,
    CIHueAdjust,
    CIHueBlendMode,
    CIKaleidoscope,
    CILanczosScaleTransform,
    CILenticularHaloGenerator,
    CILightenBlendMode,
    CILinearGradient,
    CILineOverlay,
    CILineScreen,
    CILuminosityBlendMode,
    CIMaskToAlpha,
    CIMaximumComponent,
    CIMaximumCompositing,
    CIMedianFilter,
    CIMinimumComponent,
    CIMinimumCompositing,
    CIModTransition,
    CIMotionBlur,
    CIMultiplyBlendMode,
    CIMultiplyCompositing,
    CINoiseReduction,
    CIOpTile,
    CIOverlayBlendMode,
    CIPageCurlTransition,
    CIPageCurlWithShadowTransition,
    CIParallelogramTile,
    CIPerspectiveTile,
    CIPerspectiveTransform,
    CIPinchDistortion,
    CIPixellate,
    CIPointillize,
    CIRadialGradient,
    CIRandomGenerator,
    CIRippleTransition,
    CIRowAverage,
    CISaturationBlendMode,
    CIScreenBlendMode,
    CISepiaTone,
    CIShadedMaterial,
    CISharpenLuminance,
    CISixfoldReflectedTile,
    CISixfoldRotatedTile,
    CISoftLightBlendMode,
    CISourceAtopCompositing,
    CISourceInCompositing,
    CISourceOutCompositing,
    CISourceOverCompositing,
    CISpotColor,
    CISpotLight,
    CIStarShineGenerator,
    CIStraightenFilter,
    CIStretchCrop,
    CIStripesGenerator,
    CISunbeamsGenerator,
    CISwipeTransition,
    CITemperatureAndTint,
    CIToneCurve,
    CITorusLensDistortion,
    CITriangleTile,
    CITwelvefoldReflectedTile,
    CITwirlDistortion,
    CIUnsharpMask,
    CIVibrance,
    CIVortexDistortion,
    CIWhitePointAdjust,
    CIZoomBlur
)
2014-04-02 15:44:59.498 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adds color components to achieve a brightening effect. This filter is typically used to add highlights and lens flare effects.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Addition;
    CIAttributeFilterName = CIAdditionCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAdditionCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.582 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Performs an affine transform on a source image and then clamps the pixels at the edge of the transformed image, extending them outwards. This filter performs similarly to the CIAffineTransform filter except that it produces an image with infinite extent. You can use this filter when you need to blur an image but you want to avoid a soft, black fringe along the edges.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Affine Clamp";
    CIAttributeFilterName = CIAffineClamp;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAffineClamp";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTransform =     {
        CIAttributeClass = NSAffineTransform;
        CIAttributeDefault = "<NSAffineTransform: 0xa98b20>";
        CIAttributeDescription = "The transform to apply to the image.";
        CIAttributeDisplayName = Transform;
        CIAttributeIdentity = "<NSAffineTransform: 0xa8a6d0>";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.593 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Applies an affine transform to an image and then tiles the transformed image.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Affine Tile";
    CIAttributeFilterName = CIAffineTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAffineTile";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTransform =     {
        CIAttributeClass = NSAffineTransform;
        CIAttributeDefault = "<NSAffineTransform: 0xa991c0>";
        CIAttributeDescription = "The transform to apply to the image.";
        CIAttributeDisplayName = Transform;
        CIAttributeIdentity = "<NSAffineTransform: 0xa99230>";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.630 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Applies an affine transform to an image. You can scale, translate, or rotate the input image. You can also apply a combination of these operations.";
    CIAttributeFilterCategories =     (
        CICategoryGeometryAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Affine Transform";
    CIAttributeFilterName = CIAffineTransform;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAffineTransform";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTransform =     {
        CIAttributeClass = NSAffineTransform;
        CIAttributeDefault = "<NSAffineTransform: 0xd7dfb0>";
        CIAttributeDescription = "A transform to apply to the image.";
        CIAttributeDisplayName = Transform;
        CIAttributeIdentity = "<NSAffineTransform: 0xd7dfd0>";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.677 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Calculates the average color for the specified area in an image, returning the result in a pixel.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Area Average";
    CIAttributeFilterName = CIAreaAverage;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAreaAverage";
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.691 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Calculates a histogram for the specified area in an image, returning the result in a 1D image.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Area Histogram";
    CIAttributeFilterName = CIAreaHistogram;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAreaHistogram";
    inputCount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 64;
        CIAttributeDescription = "The number of bins for the histogram.";
        CIAttributeDisplayName = Count;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = 10;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image whose histogram you want to calculate.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The scale value to use for the histogram values.";
        CIAttributeDisplayName = Scale;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.709 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Calculates the maximum component values for the specified area in an image, returning the result in a pixel.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Area Maximum";
    CIAttributeFilterName = CIAreaMaximum;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAreaMaximum";
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.755 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Finds and returns the pixel with the maximum alpha value.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Area Maximum Alpha";
    CIAttributeFilterName = CIAreaMaximumAlpha;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAreaMaximumAlpha";
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.776 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Calculates the minimum component values for the specified area in an image, returning the result in a pixel.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Area Minimum";
    CIAttributeFilterName = CIAreaMinimum;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAreaMinimum";
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.789 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Finds and returns the pixel with the minimum alpha value.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Area Minimum Alpha";
    CIAttributeFilterName = CIAreaMinimumAlpha;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIAreaMinimumAlpha";
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.795 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by swiping rectangular portions of the foreground image to disclose the target image.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Bars Swipe Transition";
    CIAttributeFilterName = CIBarsSwipeTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIBarsSwipeTransition";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "3.14159265359";
        CIAttributeDescription = "The angle (in degrees) of the bars.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = "6.28318530718";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputBarOffset =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "The offset of one bar with respect to another";
        CIAttributeDisplayName = "Bar Offset";
        CIAttributeIdentity = 10;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 30;
        CIAttributeDescription = "The width of each bar.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 30;
        CIAttributeMin = 2;
        CIAttributeSliderMax = 300;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.805 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses values from a grayscale mask to interpolate between an image and the background. When a mask value is 0.0, the result is the background. When the mask value is 1.0, the result is the image.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Blend With Mask";
    CIAttributeFilterName = CIBlendWithMask;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIBlendWithMask";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputMaskImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "A grayscale mask. When a mask value is 0.0, the result is the background. When the mask value is 1.0, the result is the image.";
        CIAttributeDisplayName = "Mask Image";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.812 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Softens edges and applies a pleasant glow to an image.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Bloom;
    CIAttributeFilterName = CIBloom;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIBloom";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The intensity of the effect. A value of 0.0 is no effect. A value of 1.0 is the maximum effect.";
        CIAttributeDisplayName = Intensity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "The radius determines how many pixels are used to create the effect. The larger the radius, the greater the effect.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.817 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Smooths or sharpens an image using a box-shaped convolution kernel.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Box Blur";
    CIAttributeFilterName = CIBoxBlur;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIBoxBlur";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "The radius determines how many pixels are used to create the blur. The larger the radius, the blurrier the result.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.825 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a concave or convex bump that originates at a specified point in the image.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Bump Distortion";
    CIAttributeFilterName = CIBumpDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIBumpDistortion";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the bump.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 300;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 600;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The scale of the effect determines the curvature of the bump. A value of 0.0 has no effect. Positive values create an outward bump; negative values create an inward bump.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 0;
        CIAttributeMin = "-1";
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = "-1";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.869 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a bump that originates from a linear portion of the image.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Bump Distortion Linear";
    CIAttributeFilterName = CIBumpDistortionLinear;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIBumpDistortionLinear";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the line around which the distortion occurs.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "6.283185307179586";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[300 300]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 300;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 600;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The scale of the effect.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 1;
        CIAttributeMin = "-1";
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.875 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a checkerboard pattern. You can specify the checkerboard size and colors, and the sharpness of the pattern.";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Checkerboard;
    CIAttributeFilterName = CICheckerboardGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICheckerboardGenerator";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The center of the area, as x and y coordinates, to filter.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor0 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "A color to use for the first set of the checkerboard squares.";
        CIAttributeDisplayName = "Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0 0 0 1)";
        CIAttributeDescription = "A color to use for the second set of the checkerboard squares.";
        CIAttributeDisplayName = "Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The sharpness of the checkerboard pattern. The smaller the value, the more blurry the pattern. Values range from 0.0 to 1.0.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 80;
        CIAttributeDescription = "The width of a square in the checkerboard pattern.";
        CIAttributeDisplayName = Width;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.886 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Distorts the pixels starting at the circumference of a circle and emanating outward.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Circle Splash Distortion";
    CIAttributeFilterName = CICircleSplashDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICircleSplashDistortion";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 150;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = "0.1";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.893 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates a circular-shaped halftone screen.";
    CIAttributeFilterCategories =     (
        CICategoryHalftoneEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Circular Screen";
    CIAttributeFilterName = CICircularScreen;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICircularScreen";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the circular screen pattern";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.7";
        CIAttributeDescription = "The sharpness of the circles. The larger the value, the sharper the circles.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The distance between each circle in the pattern.";
        CIAttributeDisplayName = Width;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 50;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.898 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Wraps an image around a transparent circle. The distortion of the image increases with the distance from the center of the circle.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Circular Wrap Distortion";
    CIAttributeFilterName = CICircularWrap;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICircularWrap";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the effect.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 150;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 600;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.911 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a color, halftoned rendition of the source image, using cyan, magenta, yellow, and black inks over a white page.";
    CIAttributeFilterCategories =     (
        CICategoryHalftoneEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "CMYK Halftone";
    CIAttributeFilterName = CICMYKHalftone;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICMYKHalftone";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the halftone pattern";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputGCR =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The gray component replacement value. The value can vary from 0.0 (none) to 1.0.";
        CIAttributeDisplayName = "Gray Component Replacement";
        CIAttributeIdentity = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetIntermediate;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.7";
        CIAttributeDescription = "The sharpness of the pattern. The larger the value, the sharper the pattern.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputUCR =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The under color removal value. The value can vary from 0.0 to 1.0. ";
        CIAttributeDisplayName = "Under Color Removal";
        CIAttributeIdentity = "0.5";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetIntermediate;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The distance between dots in the pattern.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 6;
        CIAttributeMin = 2;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.969 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses the luminance values of the background with the hue and saturation values of the source image. This mode preserves the gray levels in the image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Blend Mode";
    CIAttributeFilterName = CIColorBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.972 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Darkens the background image samples to reflect the source image samples. Source image sample values that specify white do not produce a change.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Burn Blend Mode";
    CIAttributeFilterName = CIColorBurnBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorBurnBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.976 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjusts saturation, brightness, and contrast values.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Controls";
    CIAttributeFilterName = CIColorControls;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorControls";
    inputBrightness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The amount of brightness to apply. The larger the value, the brighter the result.";
        CIAttributeDisplayName = Brightness;
        CIAttributeIdentity = 0;
        CIAttributeMin = "-1";
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = "-1";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputContrast =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The amount of contrast to apply. The larger the value, the more contrast in the resulting image.";
        CIAttributeDisplayName = Contrast;
        CIAttributeIdentity = 1;
        CIAttributeMin = "0.25";
        CIAttributeSliderMax = 4;
        CIAttributeSliderMin = "0.25";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSaturation =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The amount of saturation to apply. The larger the value, the more saturated the result.";
        CIAttributeDisplayName = Saturation;
        CIAttributeIdentity = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.980 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses a three-dimensional color table to transform the source image pixels. The color table must be  composed of floating-point RGBA cells that use premultiplied alpha. The cells are organized in a standard ordering. The columns and rows of the data are indexed by red and green, respectively. Each data plane is followed by the next higher plane in the data, with planes indexed by blue.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Cube";
    CIAttributeFilterName = CIColorCube;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorCube";
    inputCubeData =     {
        CIAttributeClass = NSData;
        CIAttributeDefault = <00000000 00000000 00000000 0000803f 0000803f 00000000 00000000 0000803f 00000000 0000803f 00000000 0000803f 0000803f 0000803f 00000000 0000803f 00000000 00000000 0000803f 0000803f 0000803f 00000000 0000803f 0000803f 00000000 0000803f 0000803f 0000803f 0000803f 0000803f 0000803f 0000803f>;
        CIAttributeDescription = "This is a color table of floating-point RGBA cells that use premultiplied alpha. The cells are organized in a standard ordering. The columns and rows of the data are indexed by red and green, respectively. Each data plane is followed by the next higher plane in the data, with planes indexed by blue.";
        CIAttributeDisplayName = "Cube Data";
        CIAttributeIdentity = <00000000 00000000 00000000 0000803f 0000803f 00000000 00000000 0000803f 00000000 0000803f 00000000 0000803f 0000803f 0000803f 00000000 0000803f 00000000 00000000 0000803f 0000803f 0000803f 00000000 0000803f 0000803f 00000000 0000803f 0000803f 0000803f 0000803f 0000803f 0000803f 0000803f>;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCubeDimension =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 2;
        CIAttributeDisplayName = "Cube Dimension";
        CIAttributeIdentity = 2;
        CIAttributeMax = 128;
        CIAttributeMin = 2;
        CIAttributeType = CIAttributeTypeCount;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.991 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Brightens the background image samples to reflect the source image samples. Source image sample values that specify black do not produce a change.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Dodge Blend Mode";
    CIAttributeFilterName = CIColorDodgeBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorDodgeBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:44:59.995 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Inverts the colors in an image.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Invert";
    CIAttributeFilterName = CIColorInvert;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorInvert";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.003 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Performs a nonlinear transformation of source color values using mapping values provided in a table.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Map";
    CIAttributeFilterName = CIColorMap;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorMap";
    inputGradientImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image data from this image transforms the source image values.";
        CIAttributeDisplayName = "Gradient Image";
        CIAttributeType = CIAttributeTypeGradient;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.009 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Multiplies source color values and adds a bias factor to each color component.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Matrix";
    CIAttributeFilterName = CIColorMatrix;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorMatrix";
    inputAVector =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 0 1]";
        CIAttributeDescription = "The amount of alpha to multiply the source color values by.";
        CIAttributeDisplayName = "Alpha Vector";
        CIAttributeIdentity = "[0 0 0 1]";
        CIUIParameterSet = CIUISetBasic;
    };
    inputBVector =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 1 0]";
        CIAttributeDescription = "The amount of blue to multiply the source color values by.";
        CIAttributeDisplayName = "Blue Vector";
        CIAttributeIdentity = "[0 0 1 0]";
        CIUIParameterSet = CIUISetBasic;
    };
    inputBiasVector =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 0 0]";
        CIAttributeDescription = "A vector that's added to each color component.";
        CIAttributeDisplayName = "Bias Vector";
        CIAttributeIdentity = "[0 0 0 0]";
        CIUIParameterSet = CIUISetBasic;
    };
    inputGVector =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 1 0 0]";
        CIAttributeDescription = "The amount of green to multiply the source color values by.";
        CIAttributeDisplayName = "Green Vector";
        CIAttributeIdentity = "[0 1 0 0]";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRVector =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[1 0 0 0]";
        CIAttributeDescription = "The amount of red to multiply the source color values by.";
        CIAttributeDisplayName = "Red Vector";
        CIAttributeIdentity = "[1 0 0 0]";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.069 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Remaps colors so they fall within shades of a single color.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Monochrome";
    CIAttributeFilterName = CIColorMonochrome;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorMonochrome";
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.6 0.45 0.3 1)";
        CIAttributeDescription = "The monochrome color to apply to the image.";
        CIAttributeDisplayName = Color;
        CIAttributeType = CIAttributeTypeOpaqueColor;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The intensity of the monochrome effect. A value of 1.0 creates a monochrome image using the supplied color. A value of 0.0 has no effect on the image.";
        CIAttributeDisplayName = Intensity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.073 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Remaps red, green, and blue color components to the number of brightness values you specify for each color component. This filter flattens colors to achieve a look similar to that of a silk-screened poster.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Color Posterize";
    CIAttributeFilterName = CIColorPosterize;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIColorPosterize";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputLevels =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The number of brightness levels to use for each color component. Lower values result in a more extreme poster effect.";
        CIAttributeDisplayName = Levels;
        CIAttributeIdentity = 300;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 30;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.082 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates a comic book drawing by outlining edges and applying a color halftone effect.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Comic Effect";
    CIAttributeFilterName = CIComicEffect;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIComicEffect";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.084 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a solid color. You typically use the output of this filter as the input to another filter.";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Constant Color";
    CIAttributeFilterName = CIConstantColorGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIConstantColorGenerator";
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0 0 1)";
        CIAttributeDescription = "The color to generate.";
        CIAttributeDisplayName = Color;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.088 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by simulating the effect of a copy machine.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Copy Machine";
    CIAttributeFilterName = CICopyMachineTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICopyMachineTransition";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the copier light.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = "6.283185307179586";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.6 1 0.8 1)";
        CIAttributeDescription = "The color of the copier light.";
        CIAttributeDisplayName = Color;
        CIAttributeType = CIAttributeTypeOpaqueColor;
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 300 300]";
        CIAttributeDescription = "A rectangle that defines the extent of the effect.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputOpacity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.3";
        CIAttributeDescription = "The opacity of the copier light. A value of 0.0 is transparent. A value of 1.0 is opaque.";
        CIAttributeDisplayName = Opacity;
        CIAttributeIdentity = "1.3";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 3;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 200;
        CIAttributeDescription = "The width of the copier light. ";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 200;
        CIAttributeMin = "0.1";
        CIAttributeSliderMax = 500;
        CIAttributeSliderMin = "0.1";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.095 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Applies a crop to an image. The size and shape of the cropped image depend on the rectangle you specify.";
    CIAttributeFilterCategories =     (
        CICategoryGeometryAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Crop;
    CIAttributeFilterName = CICrop;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICrop";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRectangle =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 300 300]";
        CIAttributeDescription = "The rectangle that specifies the crop to apply to the image.";
        CIAttributeDisplayName = Rectangle;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.098 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates polygon-shaped color blocks by aggregating source pixel-color values.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Crystallize;
    CIAttributeFilterName = CICrystallize;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CICrystallize";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The center of the area, as x and y coordinates, to filter.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 20;
        CIAttributeDescription = "The radius determines how many pixels are used to create the effect. The larger the radius, the larger the resulting crystals.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 1;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.101 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates composite image samples by choosing the darker samples (from either the source image or the background). The result is that the background image samples are replaced by any source image samples that are darker. Otherwise, the background image samples are left unchanged.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Darken Blend Mode";
    CIAttributeFilterName = CIDarkenBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDarkenBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.148 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates miniaturization effect created by Tilt & Shift lens by performing depth of field effects.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Depth of Field";
    CIAttributeFilterName = CIDepthOfField;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDepthOfField";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint0 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 300]";
        CIAttributeDisplayName = "Point 1";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint1 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[300 300]";
        CIAttributeDisplayName = "Point 2";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The distance from the center of the effect.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 30;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSaturation =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.5";
        CIAttributeDescription = "The amount to adjust the saturation.";
        CIAttributeDisplayName = Saturation;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputUnsharpMaskIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDisplayName = "Unsharp Mask Intensity";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputUnsharpMaskRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "2.5";
        CIAttributeDisplayName = "Unsharp Mask Radius";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.159 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Subtracts either the source image sample color from the background image sample color, or the reverse, depending on which sample has the greater brightness value. Source image sample values that are black produce no change; white inverts the background color values.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Difference Blend Mode";
    CIAttributeFilterName = CIDifferenceBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDifferenceBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.170 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Smooths or sharpens an image using a disc-shaped convolution kernel.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Disc Blur";
    CIAttributeFilterName = CIDiscBlur;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDiscBlur";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 8;
        CIAttributeDescription = "The radius determines how many pixels are used to create the blur. The larger the radius, the blurrier the result.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.176 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another using the shape defined by a mask.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Disintegrate With Mask";
    CIAttributeFilterName = CIDisintegrateWithMaskTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDisintegrateWithMaskTransition";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputMaskImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "An image that defines the shape to use when disintegrating from the source to the target image.";
        CIAttributeDisplayName = "Mask Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowDensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.65";
        CIAttributeDescription = "The density of the shadow created by the mask.";
        CIAttributeDisplayName = "Shadow Density";
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowOffset =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 -10]";
        CIAttributeDescription = "The offset of the shadow created by the mask.";
        CIAttributeDisplayName = "Shadow Offset";
        CIAttributeIdentity = "[0 0]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 8;
        CIAttributeDescription = "The radius of the shadow created by the mask.";
        CIAttributeDisplayName = "Shadow Radius";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 50;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.191 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Applies the grayscale values of the second image to the first image. The output image has a texture defined by the grayscale values.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Displacement Distortion";
    CIAttributeFilterName = CIDisplacementDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDisplacementDistortion";
    inputDisplacementImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "An image whose grayscale values will be applied to the source image.";
        CIAttributeDisplayName = "Displacement Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 50;
        CIAttributeDescription = "The amount of texturing of the resulting image. The larger the value, the greater the texturing.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.202 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses a dissolve to transition from one image to another.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Dissolve;
    CIAttributeFilterName = CIDissolveTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDissolveTransition";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.211 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates the dot patterns of a halftone screen.";
    CIAttributeFilterCategories =     (
        CICategoryHalftoneEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Dot Screen";
    CIAttributeFilterName = CIDotScreen;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDotScreen";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the dot screen pattern";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.7";
        CIAttributeDescription = "The sharpness of the pattern. The larger the value, the sharper the pattern.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The distance between dots in the pattern.";
        CIAttributeDisplayName = Width;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 50;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.246 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Performs M.C. Escher Droste style deformation";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Droste;
    CIAttributeFilterName = CIDroste;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIDroste";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputInsetPoint0 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[200 200]";
        CIAttributeDisplayName = InsetPoint0;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputInsetPoint1 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[400 400]";
        CIAttributeDisplayName = InsetPoint1;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPeriodicity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDisplayName = Periodicity;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRotation =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDisplayName = Rotation;
        CIAttributeMin = 0;
        CIAttributeSliderMax = "6.283185307179586";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStrands =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDisplayName = Strands;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputZoom =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDisplayName = Zoom;
        CIAttributeMin = "0.01";
        CIAttributeSliderMax = 5;
        CIAttributeSliderMin = "0.01";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.255 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Finds all edges in an image and displays them in color.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Edges;
    CIAttributeFilterName = CIEdges;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIEdges";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The intensity of the edges. The larger the value, the higher the intensity.";
        CIAttributeDisplayName = Intensity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.261 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a stylized black-and-white rendition of an image that looks similar to a woodblock cutout.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Edge Work";
    CIAttributeFilterName = CIEdgeWork;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIEdgeWork";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 3;
        CIAttributeDescription = "The thickness of the edges. The larger the value, the thicker the edges.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 20;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.268 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by applying an 8-way reflected symmetry.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Eightfold Reflected Tile";
    CIAttributeFilterName = CIEightfoldReflectedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIEightfoldReflectedTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.273 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces an effect similar to that produced by the CIDifferenceBlendMode filter but with lower contrast. Source image sample values that are black do not produce a change; white inverts the background color values.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Exclusion Blend Mode";
    CIAttributeFilterName = CIExclusionBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIExclusionBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.280 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjusts the exposure setting for an image similar to the way you control exposure for a camera when you change the F-stop.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Exposure Adjust";
    CIAttributeFilterName = CIExposureAdjust;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIExposureAdjust";
    inputEV =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The amount to adjust the exposure of the image by. The larger the value, the brighter the exposure.";
        CIAttributeDisplayName = EV;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = "-10";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.282 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Maps luminance to a color ramp of two colors. False color is often used to process astronomical and other scientific data, such as ultraviolet and x-ray images.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "False Color";
    CIAttributeFilterName = CIFalseColor;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIFalseColor";
    inputColor0 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.3 0 0 1)";
        CIAttributeDescription = "The first color to use for the color ramp.";
        CIAttributeDisplayName = "Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0.9 0.8 1)";
        CIAttributeDescription = "The second color to use for the color ramp.";
        CIAttributeDisplayName = "Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.287 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by creating a flash. The flash originates from a point you specify. Small at first, it rapidly expands until the image frame is completely filled with the flash color. As the color fades, the target image begins to appear.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Flash;
    CIAttributeFilterName = CIFlashTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIFlashTransition";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0.8 0.6 1)";
        CIAttributeDescription = "The color of the light rays emanating from the flash.";
        CIAttributeDisplayName = Color;
        CIAttributeType = CIAttributeTypeOpaqueColor;
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 300 300]";
        CIAttributeDescription = "The extent of the flash.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputFadeThreshold =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.85";
        CIAttributeDescription = "The amount of fade between the flash and the target image. The higher the value, the more flash time and the less fade time.";
        CIAttributeDisplayName = "Fade Threshold";
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputMaxStriationRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "2.58";
        CIAttributeDescription = "The radius of the light rays emanating from the flash.";
        CIAttributeDisplayName = "Maximum Striation Radius";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStriationContrast =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.375";
        CIAttributeDescription = "The contrast of the light rays emanating from the flash.";
        CIAttributeDisplayName = "Striation Contrast";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 5;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStriationStrength =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The strength light rays emanating from the flash.";
        CIAttributeDisplayName = "Striation Strength";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 3;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.338 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by applying a 4-way reflected symmetry.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Fourfold Reflected Tile";
    CIAttributeFilterName = CIFourfoldReflectedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIFourfoldReflectedTile";
    inputAcuteAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.570796326794897";
        CIAttributeDescription = "The primary angle for the repeating reflected tile. Small values create thin diamond tiles, and higher values create fatter reflected tiles.";
        CIAttributeDisplayName = "Acute Angle";
        CIAttributeIdentity = "1.570796326794897";
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.345 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by rotating the source at increments of 90 degrees.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Fourfold Rotated Tile";
    CIAttributeFilterName = CIFourfoldRotatedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIFourfoldRotatedTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.353 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by applying 4 translation operations.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Fourfold Translated Tile";
    CIAttributeFilterName = CIFourfoldTranslatedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIFourfoldTranslatedTile";
    inputAcuteAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.570796326794897";
        CIAttributeDescription = "The primary angle for the repeating translated tile. Small values create thin diamond tiles, and higher values create fatter translated tiles.";
        CIAttributeDisplayName = "Acute Angle";
        CIAttributeIdentity = "1.570796326794897";
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.358 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjusts midtone brightness. This filter is typically used to compensate for nonlinear effects of displays. Adjusting the gamma effectively changes the slope of the transition between black and white.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Gamma Adjust";
    CIAttributeFilterName = CIGammaAdjust;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGammaAdjust";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPower =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.75";
        CIAttributeDescription = "A gamma value to use to correct image brightness. The larger the value, the darker the result.";
        CIAttributeDisplayName = Power;
        CIAttributeIdentity = 1;
        CIAttributeSliderMax = 3;
        CIAttributeSliderMin = "0.1";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.368 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Spreads source pixels by an amount specified by a Gaussian distribution.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Gaussian Blur";
    CIAttributeFilterName = CIGaussianBlur;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGaussianBlur";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "The radius determines how many pixels are used to create the blur. The larger the radius, the blurrier the result.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.371 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a gradient that varies from one color to another using a Gaussian distribution.";
    CIAttributeFilterCategories =     (
        CICategoryGradient,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Gaussian Gradient";
    CIAttributeFilterName = CIGaussianGradient;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGaussianGradient";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The center of the area, as x and y coordinates, to filter.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor0 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "The first color to use in the gradient.";
        CIAttributeDisplayName = "Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0 0 0 0)";
        CIAttributeDescription = "The second color to use in the gradient.";
        CIAttributeDisplayName = "Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The radius of the Gaussian distribution.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.374 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Distorts an image by applying a glass-like texture. The raised portions of the output image are the result of applying a texture map.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Glass Distortion";
    CIAttributeFilterName = CIGlassDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGlassDistortion";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 200;
        CIAttributeDescription = "The amount of texturing of the resulting image. The larger the value, the greater the texturing.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 500;
        CIAttributeSliderMin = "0.01";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTexture =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "A texture to apply to the source image.";
        CIAttributeDisplayName = Texture;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.380 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a lozenge-shaped lens and distorts the portion of the image over which the lens is placed.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Glass Lozenge";
    CIAttributeFilterName = CIGlassLozenge;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGlassLozenge";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint0 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position that defines the center of the circle at one end of the lozenge.";
        CIAttributeDisplayName = "Point 1";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint1 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[350 150]";
        CIAttributeDescription = "The x and y position that defines the center of the circle at the other end of the lozenge.";
        CIAttributeDisplayName = "Point 2";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The radius of the lozenge. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRefraction =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.7";
        CIAttributeDescription = "The refraction of the glass.";
        CIAttributeDisplayName = Refraction;
        CIAttributeIdentity = 0;
        CIAttributeMin = "-5";
        CIAttributeSliderMax = 5;
        CIAttributeSliderMin = "-5";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.423 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by translating and smearing the image.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Glide Reflected Tile";
    CIAttributeFilterName = CIGlideReflectedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGlideReflectedTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.426 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Dulls the highlights of an image.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Gloom;
    CIAttributeFilterName = CIGloom;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIGloom";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The intensity of the effect. A value of 0.0 is no effect. A value of 1.0 is the maximum effect.";
        CIAttributeDisplayName = Intensity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "The radius determines how many pixels are used to create the effect. The larger the radius, the greater the effect.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.433 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Either multiplies or screens colors, depending on the source image sample color. If the source image sample color is lighter than 50% gray, the background is lightened, similar to screening. If the source image sample color is darker than 50% gray, the background is darkened, similar to multiplying. If the source image sample color is equal to 50% gray, the source image is not changed. Image samples that are equal to pure black or pure white result in pure black or white. The overall effect is similar to what you would achieve by shining a harsh spotlight on the source image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Hard Light Blend Mode";
    CIAttributeFilterName = CIHardLightBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHardLightBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.437 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates the hatched pattern of a halftone screen.";
    CIAttributeFilterCategories =     (
        CICategoryHalftoneEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Hatched Screen";
    CIAttributeFilterName = CIHatchedScreen;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHatchedScreen";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the hatched screen pattern";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.7";
        CIAttributeDescription = "The amount of sharpening to apply.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The distance between lines in the pattern.";
        CIAttributeDisplayName = Width;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 50;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.443 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a continuous three-dimensional, loft-shaped height field from a grayscale mask. The white values of the mask define those pixels that are inside the height field while the black values define those pixels that are outside. The field varies smoothly and continuously inside the mask, reaching the value 0 at the edge of the mask. You can use this filter with the CIShadedMaterial filter to produce extremely realistic shaded objects.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Height Field From Mask";
    CIAttributeFilterName = CIHeightFieldFromMask;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHeightFieldFromMask";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The white values of the mask define those pixels that are inside the height field while the black values define those pixels that are outside. The field varies smoothly and continuously inside the mask, reaching the value 0 at the edge of the mask.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "The distance from the edge of the mask for the smooth transition is proportional to the input radius. Larger values make the transition smoother and more pronounced. Smaller values make the transition approximate a fillet radius.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 10;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 300;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.449 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Displays an image as colored hexagons whose color is an average of the pixels they replace.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Hexagonal Pixellate";
    CIAttributeFilterName = CIHexagonalPixellate;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHexagonalPixellate";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 8;
        CIAttributeDescription = "The scale determines the size of the hexagons. Larger values result in larger hexagons.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 1;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.452 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjust the tonal mapping of an image while preserving spatial detail";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Highlight and Shadow Adjust";
    CIAttributeFilterName = CIHighlightShadowAdjust;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHighlightShadowAdjust";
    inputHighlightAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The amount of adjustment to the highlights of the image.";
        CIAttributeDisplayName = HighlightAmount;
        CIAttributeIdentity = 1;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = "0.3";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 2;
        CIAttributeDescription = "Shadow Hightlight Radius";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The amount of adjustment to the shadows of the image.";
        CIAttributeDisplayName = ShadowAmount;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = "-1";
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = "-1";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.456 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a displayable histogram image from the output of the CIAreaHistogram filter.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Histogram Display";
    CIAttributeFilterName = CIHistogramDisplayFilter;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHistogramDisplayFilter";
    inputHeight =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The height of the displayable histogram image.";
        CIAttributeDisplayName = Height;
        CIAttributeMax = 200;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputHighLimit =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The fraction of the right portion of the histogram image to make lighter.";
        CIAttributeDisplayName = HighLimit;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputLowLimit =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The fraction of the left portion of the histogram image to make darker";
        CIAttributeDisplayName = LowLimit;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.459 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a circular area that pushes the image pixels outward, distorting those pixels closest to the circle the most.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Hole Distortion";
    CIAttributeFilterName = CIHoleDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHoleDistortion";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 150;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = "0.1";
        CIAttributeMin = "0.01";
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = "0.01";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.462 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Changes the overall hue, or tint, of the source pixels.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Hue Adjust";
    CIAttributeFilterName = CIHueAdjust;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHueAdjust";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "An angle (in degrees) to use to correct the hue of an image.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.465 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses the luminance and saturation values of the background with the hue of the source image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Hue Blend Mode";
    CIAttributeFilterName = CIHueBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIHueBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.467 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a kaleidoscopic image from a source image by applying 12-way symmetry.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Kaleidoscope;
    CIAttributeFilterName = CIKaleidoscope;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIKaleidoscope";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of reflection.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The number of reflections in the pattern.";
        CIAttributeDisplayName = Count;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 64;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.471 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a high-quality, scaled version of a source image. You typically use this filter to scale down an image.";
    CIAttributeFilterCategories =     (
        CICategoryGeometryAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Lanczos Scale Transform";
    CIAttributeFilterName = CILanczosScaleTransform;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILanczosScaleTransform";
    inputAspectRatio =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The aspect ratio of the image.";
        CIAttributeDisplayName = "Aspect Ratio";
        CIAttributeIdentity = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = "0.5";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The scaling factor to use on the image. Values less than 1.0 scale down the images. Values greater than 1.0 scale up the image.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = "1.5";
        CIAttributeSliderMin = "0.05";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.474 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates a halo that is generated by the diffraction associated with the spread of a lens. This filter is typically applied to another image to simulate lens flares and similar effects.";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Lenticular Halo";
    CIAttributeFilterName = CILenticularHaloGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILenticularHaloGenerator";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the halo.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0.9 0.8 1)";
        CIAttributeDescription = "A color.";
        CIAttributeDisplayName = Color;
        CIUIParameterSet = CIUISetBasic;
    };
    inputHaloOverlap =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.77";
        CIAttributeDisplayName = "Halo Overlap";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputHaloRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 70;
        CIAttributeDescription = "The radius of the halo.";
        CIAttributeDisplayName = "Halo Radius";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputHaloWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 87;
        CIAttributeDescription = "The width if the halo, from its inner radius to its outer radius.";
        CIAttributeDisplayName = "Halo Width";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 300;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStriationContrast =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The contrast of the halo colors. Larger values are higher contrast.";
        CIAttributeDisplayName = "Striation Contrast";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 5;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStriationStrength =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The intensity of the halo colors. Larger values are more intense.";
        CIAttributeDisplayName = "Striation Strength";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 3;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The duration of the effect.";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.517 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates composite image samples by choosing the lighter samples (either from the source image or the background). The result is that the background image samples are replaced by any source image samples that are lighter. Otherwise, the background image samples are left unchanged.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Lighten Blend Mode";
    CIAttributeFilterName = CILightenBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILightenBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.522 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a gradient that varies along a linear axis between two defined endpoints.";
    CIAttributeFilterCategories =     (
        CICategoryGradient,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Linear Gradient";
    CIAttributeFilterName = CILinearGradient;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILinearGradient";
    inputColor0 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "The first color to use in the gradient.";
        CIAttributeDisplayName = "Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0 0 0 1)";
        CIAttributeDescription = "The second color to use in the gradient.";
        CIAttributeDisplayName = "Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint0 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0]";
        CIAttributeDescription = "The starting position of the gradient -- where the first color begins.";
        CIAttributeDisplayName = "Point 1";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint1 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[200 200]";
        CIAttributeDescription = "The ending position of the gradient -- where the sedon color begins.";
        CIAttributeDisplayName = "Point 2";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.526 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a sketch that outlines the edges of an image in black, leaving the non-outlined portions of the image transparent. The result has alpha and is rendered in black, so it won't look like much until you render it over another image using source over compositing.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Line Overlay";
    CIAttributeFilterName = CILineOverlay;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILineOverlay";
    inputContrast =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 50;
        CIAttributeDescription = "The amount of anti-aliasing to use on the edges produced by this filter. Higher values produce higher contrast edges (they are less anti-aliased).";
        CIAttributeDisplayName = Contrast;
        CIAttributeIdentity = 1;
        CIAttributeMin = "0.25";
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = "0.25";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputEdgeIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The accentuation factor of the Sobel gradient information when tracing the edges of the image. Higher values find more edges, although typically a low value (such as 1.0) is used.";
        CIAttributeDisplayName = "Edge Intensity";
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputNRNoiseLevel =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.07000000000000001";
        CIAttributeDescription = "The noise level of the image (used with camera data) that gets removed before tracing the edges of the image. Increasing the noise level helps to clean up the traced edges of the image.";
        CIAttributeDisplayName = "NR Noise Level";
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = "0.1";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputNRSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.71";
        CIAttributeDescription = "The amount of sharpening done when removing noise in the image before tracing the edges of the image. This improves the edge acquisition.";
        CIAttributeDisplayName = "NR Sharpness";
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputThreshold =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.1";
        CIAttributeDescription = "This value determines edge visibility. Larger values thin out the edges.";
        CIAttributeDisplayName = Threshold;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.535 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates the line pattern of a halftone screen.";
    CIAttributeFilterCategories =     (
        CICategoryHalftoneEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Line Screen";
    CIAttributeFilterName = CILineScreen;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILineScreen";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the line screen pattern";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.7";
        CIAttributeDescription = "The sharpness of the pattern. The larger the value, the sharper the pattern.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 6;
        CIAttributeDescription = "The distance between lines in the pattern.";
        CIAttributeDisplayName = Width;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 50;
        CIAttributeSliderMin = 2;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.539 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses the hue and saturation of the background with the luminance of the source image. This mode creates an effect that is inverse to the effect created by the CIColorBlendMode filter.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Luminosity Blend Mode";
    CIAttributeFilterName = CILuminosityBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CILuminosityBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.544 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Converts a grayscale image to a white image that is masked by alpha. The white values from the source image produce the inside of the mask; the black values become completely transparent.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Mask to Alpha";
    CIAttributeFilterName = CIMaskToAlpha;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMaskToAlpha";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.560 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Converts an image to grayscale using the maximum of the three color components.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Maximum Component";
    CIAttributeFilterName = CIMaximumComponent;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMaximumComponent";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.566 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Computes the maximum value, by color component, of two input images and creates an output image using the maximum values. This is similar to dodging.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Maximum;
    CIAttributeFilterName = CIMaximumCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMaximumCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.690 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Computes the median value for a group of neighboring pixels and replaces each pixel value with the median. The effect is to reduce noise.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Median;
    CIAttributeFilterName = CIMedianFilter;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMedianFilter";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.724 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Converts an image to grayscale using the minimum of the three color components.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Minimum Component";
    CIAttributeFilterName = CIMinimumComponent;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMinimumComponent";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.732 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Computes the minimum value, by color component, of two input images and creates an output image using the minimum values. This is similar to burning.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Minimum;
    CIAttributeFilterName = CIMinimumCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMinimumCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.772 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by revealing the target image through irregularly shaped holes.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Mod;
    CIAttributeFilterName = CIModTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIModTransition";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 2;
        CIAttributeDescription = "The angle of the mod hole pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "6.283185307179586";
        CIAttributeSliderMin = "-6.283185307179586";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCompression =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The amount of stretching applied to the mod hole pattern. Holes in the center are not distorted as much as those at the edge of the image.";
        CIAttributeDisplayName = Compression;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 100;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 150;
        CIAttributeDescription = "The radius of the undistorted holes in the pattern.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.781 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Blurs an image to simulate the effect of using a camera that moves a specified angle and distance while capturing the image.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Motion Blur";
    CIAttributeFilterName = CIMotionBlur;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMotionBlur";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the motion determines which direction the blur smears.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 20;
        CIAttributeDescription = "The radius determines how many pixels are used to create the blur. The larger the radius, the blurrier the result.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.796 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Multiplies the source image samples with the background image samples. This results in colors that are at least as dark as either of the two contributing sample colors.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Multiply Blend Mode";
    CIAttributeFilterName = CIMultiplyBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMultiplyBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.808 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Multiplies the color component of two input images and creates an output image using the multiplied values. This filter is typically used to add a spotlight or similar lighting effect to an image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Multiply;
    CIAttributeFilterName = CIMultiplyCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIMultiplyCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.818 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Reduces noise using a threshold value to define what is considered noise. Small changes in luminance below that value are considered noise and get a noise reduction treatment, which is a local blur. Changes above the threshold value are considered edges, so they are sharpened.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Noise Reduction";
    CIAttributeFilterName = CINoiseReduction;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CINoiseReduction";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputNoiseLevel =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.02";
        CIAttributeDescription = "The amount of noise reduction. The larger the value, the more noise reduction.";
        CIAttributeDisplayName = "Noise Level";
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = "0.1";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.4";
        CIAttributeDescription = "The sharpness of the final image. The larger the value, the sharper the result.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.872 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Segments an image, applying any specified scaling and rotation, and then assembles the image again to give an op art appearance.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Op Tile";
    CIAttributeFilterName = CIOpTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIOpTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of a tile.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "2.8";
        CIAttributeDescription = "The scale determines the number of tiles in the effect.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = "0.1";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 65;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 65;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.883 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Either multiplies or screens the source image samples with the background image samples, depending on the background color. The result is to overlay the existing image samples while preserving the highlights and shadows of the background. The background color mixes with the source image to reflect the lightness or darkness of the background.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Overlay Blend Mode";
    CIAttributeFilterName = CIOverlayBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIOverlayBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.906 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by simulating a curling page, revealing the new image as the page curls.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Page Curl";
    CIAttributeFilterName = CIPageCurlTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPageCurlTransition";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the curling page.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputBacksideImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image that appears on the back of the source image, as the page curls to reveal the target image.";
        CIAttributeDisplayName = "Backside Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 300 300]";
        CIAttributeDescription = "The extent of the effect.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The radius of the curl.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = "0.01";
        CIAttributeSliderMax = 400;
        CIAttributeSliderMin = "0.01";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadingImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "An image that looks like a shaded sphere enclosed in a square image.";
        CIAttributeDisplayName = "Shading Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.913 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by simulating a curling page, revealing the new image as the page curls.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Page Curl With Shadow";
    CIAttributeFilterName = CIPageCurlWithShadowTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPageCurlWithShadowTransition";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the curling page.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputBacksideImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image that appears on the back of the source image, as the page curls to reveal the target image.";
        CIAttributeDisplayName = "Backside Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 0 0]";
        CIAttributeDescription = "The extent of the effect.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The radius of the curl.";
        CIAttributeDisplayName = Radius;
        CIAttributeMin = "0.01";
        CIAttributeSliderMax = 400;
        CIAttributeSliderMin = "0.01";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.7";
        CIAttributeDisplayName = ShadowAmount;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 0 0]";
        CIAttributeDisplayName = ShadowExtent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadowSize =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDisplayName = ShadowSize;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.971 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Warps an image by reflecting it in a parallelogram, and then tiles the result.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Parallelogram Tile";
    CIAttributeFilterName = CIParallelogramTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIParallelogramTile";
    inputAcuteAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.570796326794897";
        CIAttributeDescription = "The primary angle for the repeating parallelogram tile. Small values create thin diamond tiles, and higher values create fatter parallelogram tiles.";
        CIAttributeDisplayName = "Acute Angle";
        CIAttributeIdentity = "1.570796326794897";
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.977 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Applies a perspective transform to an image and then tiles the result.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Perspective Tile";
    CIAttributeFilterName = CIPerspectiveTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPerspectiveTile";
    inputBottomLeft =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[155 153]";
        CIAttributeDescription = "The bottom left coordinate of a tile.";
        CIAttributeDisplayName = "Bottom Left";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputBottomRight =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[548 140]";
        CIAttributeDescription = "The bottom right coordinate of a tile.";
        CIAttributeDisplayName = "Bottom Right";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTopLeft =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[118 484]";
        CIAttributeDescription = "The top left coordinate of a tile.";
        CIAttributeDisplayName = "Top Left";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTopRight =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[646 507]";
        CIAttributeDescription = "The top right coordinate of a tile.";
        CIAttributeDisplayName = "Top Right";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.988 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Alters the geometry of an image to simulate the observer changing viewing position. You can use the perspective filter to skew an image.";
    CIAttributeFilterCategories =     (
        CICategoryGeometryAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Perspective Transform";
    CIAttributeFilterName = CIPerspectiveTransform;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPerspectiveTransform";
    inputBottomLeft =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[155 153]";
        CIAttributeDescription = "The bottom left coordinate to map the image to.";
        CIAttributeDisplayName = "Bottom Left";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputBottomRight =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[548 140]";
        CIAttributeDescription = "The bottom right coordinate to map the image to.";
        CIAttributeDisplayName = "Bottom Right";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTopLeft =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[118 484]";
        CIAttributeDescription = "The top left coordinate to map the image to.";
        CIAttributeDisplayName = "Top Left";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTopRight =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[646 507]";
        CIAttributeDescription = "The top right coordinate to map the image to.";
        CIAttributeDisplayName = "Top Right";
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.993 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a rectangular-shaped area that pinches source pixels inward, distorting those pixels closest to the rectangle the most.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Pinch Distortion";
    CIAttributeFilterName = CIPinchDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPinchDistortion";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1000;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The amount of pinching. A value of 0.0 has no effect. A value of 1.0 is the maximum pinch.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:00.997 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Makes an image blocky.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Pixellate;
    CIAttributeFilterName = CIPixellate;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPixellate";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 8;
        CIAttributeDescription = "The scale determines the size of the squares. Larger values result in larger squares.";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 1;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.004 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Renders the source image in a pointillistic style.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Pointillize;
    CIAttributeFilterName = CIPointillize;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIPointillize";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 20;
        CIAttributeDescription = "The radius of the circles in the resulting pattern.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 1;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.008 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a gradient that varies radially between two circles having the same center. It is valid for one of the two circles to have a radius of 0.";
    CIAttributeFilterCategories =     (
        CICategoryGradient,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Radial Gradient";
    CIAttributeFilterName = CIRadialGradient;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIRadialGradient";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The center of the area, as x and y coordinates, to filter.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor0 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "The first color to use in the gradient.";
        CIAttributeDisplayName = "Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0 0 0 1)";
        CIAttributeDescription = "The second color to use in the gradient.";
        CIAttributeDisplayName = "Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius0 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 5;
        CIAttributeDescription = "The radius of the starting circle to use in the gradient.";
        CIAttributeDisplayName = "Radius 1";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius1 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The radius of the ending circle to use in the gradient.";
        CIAttributeDisplayName = "Radius 2";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.015 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates an image of infinite extent whose pixel values are made up of four independent, uniformly-distributed random numbers in the 0 to 1 range.";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Random Generator";
    CIAttributeFilterName = CIRandomGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIRandomGenerator";
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.019 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by creating a circular wave that expands from the center point, revealing the new image in the wake of the wave.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Ripple;
    CIAttributeFilterName = CIRippleTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIRippleTransition";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 300 300]";
        CIAttributeDescription = "A rectangle that defines the extent of the effect.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 50;
        CIAttributeDescription = "A value that determines whether the ripple starts as a bulge (higher value) or a dimple (lower value).";
        CIAttributeDisplayName = Scale;
        CIAttributeIdentity = 0;
        CIAttributeMin = "-50";
        CIAttributeSliderMax = 50;
        CIAttributeSliderMin = "-50";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadingImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "An image that looks like a shaded sphere enclosed in a square image.";
        CIAttributeDisplayName = "Shading Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of the ripple.";
        CIAttributeDisplayName = Width;
        CIAttributeMin = 1;
        CIAttributeSliderMax = 300;
        CIAttributeSliderMin = 10;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.068 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Calculates the average color for each row of the specified area in an image, returning the result in a 1D image.";
    CIAttributeFilterCategories =     (
        CICategoryReduction,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Row Average";
    CIAttributeFilterName = CIRowAverage;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIRowAverage";
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 640 80]";
        CIAttributeDescription = "A rectangle that specifies the subregion of the image that you want to process.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to process.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.072 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses the luminance and hue values of the background with the saturation of the source image. Areas of the background that have no saturation (that is, pure gray areas) do not produce a change.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Saturation Blend Mode";
    CIAttributeFilterName = CISaturationBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISaturationBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.075 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Multiplies the inverse of the source image samples with the inverse of the background image samples. This results in colors that are at least as light as either of the two contributing sample colors.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Screen Blend Mode";
    CIAttributeFilterName = CIScreenBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIScreenBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.078 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Maps the colors of an image to various shades of brown.";
    CIAttributeFilterCategories =     (
        CICategoryColorEffect,
        CICategoryVideo,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Sepia Tone";
    CIAttributeFilterName = CISepiaTone;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISepiaTone";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The intensity of the sepia effect. A value of 1.0 creates a monochrome sepia image. A value of 0.0 has no effect on the image.";
        CIAttributeDisplayName = Intensity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.083 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a shaded image from a height field. The height field is defined to have greater heights with lighter shades, and lesser heights (lower areas) with darker shades. You can combine this filter with the CIHeightFieldFromMask filter to produce quick shadings of masks, such as text.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Shaded Material";
    CIAttributeFilterName = CIShadedMaterial;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIShadedMaterial";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 10;
        CIAttributeDescription = "THe scale of the effect. The higher the value, the more dramatic the effect.";
        CIAttributeDisplayName = Scale;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = "0.5";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputShadingImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as the height field. The resulting image has greater heights with lighter shades, and lesser heights (lower areas) with darker shades.";
        CIAttributeDisplayName = "Shading Image";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.088 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Increases image detail by sharpening. It operates on the luminance of the image; the chrominance of the pixels remains unaffected.";
    CIAttributeFilterCategories =     (
        CICategorySharpen,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Sharpen Luminance";
    CIAttributeFilterName = CISharpenLuminance;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISharpenLuminance";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.4";
        CIAttributeDescription = "The amount of sharpening to apply. Larger values are sharper.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = 2;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.092 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by applying a 6-way reflected symmetry.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Sixfold Reflected Tile";
    CIAttributeFilterName = CISixfoldReflectedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISixfoldReflectedTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.099 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by rotating the source at increments of 60 degrees.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Sixfold Rotated Tile";
    CIAttributeFilterName = CISixfoldRotatedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISixfoldRotatedTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.105 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Either darkens or lightens colors, depending on the source image sample color. If the source image sample color is lighter than 50% gray, the background is lightened, similar to dodging. If the source image sample color is darker than 50% gray, the background is darkened, similar to burning. If the source image sample color is equal to 50% gray, the background is not changed. Image samples that are equal to pure black or pure white produce darker or lighter areas, but do not result in pure black or white. The overall effect is similar to what you would achieve by shining a diffuse spotlight on the source image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Soft Light Blend Mode";
    CIAttributeFilterName = CISoftLightBlendMode;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISoftLightBlendMode";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.108 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Places the source image over the background image, then uses the luminance of the background image to determine what to show. The composite shows the background image and only those portions of the source image that are over visible parts of the background.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Source Atop";
    CIAttributeFilterName = CISourceAtopCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISourceAtopCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.111 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses the second image to define what to leave in the source image, effectively cropping the image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Source In";
    CIAttributeFilterName = CISourceInCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISourceInCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.113 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Uses the second image to define what to take out of the first image.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Source Out";
    CIAttributeFilterName = CISourceOutCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISourceOutCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.116 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Places the second image over the first.";
    CIAttributeFilterCategories =     (
        CICategoryCompositeOperation,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryHighDynamicRange,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Source Over";
    CIAttributeFilterName = CISourceOverCompositing;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISourceOverCompositing";
    inputBackgroundImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as a background image.";
        CIAttributeDisplayName = "Background Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.124 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Replaces one or more color ranges with spot colors.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Spot Color";
    CIAttributeFilterName = CISpotColor;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISpotColor";
    inputCenterColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.0784 0.0627 0.0706 1)";
        CIAttributeDescription = "The center value of the first color range to replace.";
        CIAttributeDisplayName = "Center Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenterColor2 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.5255 0.3059 0.3451 1)";
        CIAttributeDescription = "The center value of the second color range to replace.";
        CIAttributeDisplayName = "Center Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenterColor3 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.9216 0.4549 0.3333 1)";
        CIAttributeDescription = "The center value of the third color range to replace.";
        CIAttributeDisplayName = "Center Color 3";
        CIUIParameterSet = CIUISetBasic;
    };
    inputCloseness1 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.22";
        CIAttributeDescription = "A value that indicates how close the first color must match before it is replaced.";
        CIAttributeDisplayName = "Closeness 1";
        CIAttributeMin = 0;
        CIAttributeSliderMax = "0.5";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCloseness2 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.15";
        CIAttributeDescription = "A value that indicates how close the second color must match before it is replaced.";
        CIAttributeDisplayName = "Closeness 2";
        CIAttributeMin = 0;
        CIAttributeSliderMax = "0.5";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCloseness3 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "A value that indicates how close the third color must match before it is replaced.";
        CIAttributeDisplayName = "Closeness 3";
        CIAttributeMin = 0;
        CIAttributeSliderMax = "0.5";
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputContrast1 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.98";
        CIAttributeDescription = "The contrast of the first replacement color.";
        CIAttributeDisplayName = "Contrast 1";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputContrast2 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.98";
        CIAttributeDescription = "The contrast of the second replacement color.";
        CIAttributeDisplayName = "Contrast 2";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputContrast3 =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.99";
        CIAttributeDescription = "The contrast of the third replacement color.";
        CIAttributeDisplayName = "Contrast 3";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputReplacementColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.4392 0.1922 0.1961 1)";
        CIAttributeDescription = "A replacement color for the first color range.";
        CIAttributeDisplayName = "Replacement Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputReplacementColor2 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.9137 0.5608 0.5059 1)";
        CIAttributeDescription = "A replacement color for the second color range.";
        CIAttributeDisplayName = "Replacement Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputReplacementColor3 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0.9098 0.7529 0.6078 1)";
        CIAttributeDescription = "A replacement color for the third color range.";
        CIAttributeDisplayName = "Replacement Color 3";
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.175 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Applies a directional spotlight effect to an image.";
    CIAttributeFilterCategories =     (
        CICategoryStylize,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Spot Light";
    CIAttributeFilterName = CISpotLight;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISpotLight";
    inputBrightness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 3;
        CIAttributeDescription = "The brightness of the spotlight.";
        CIAttributeDisplayName = Brightness;
        CIAttributeIdentity = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "The color of the spotlight.";
        CIAttributeDisplayName = Color;
        CIAttributeType = CIAttributeTypeOpaqueColor;
        CIUIParameterSet = CIUISetBasic;
    };
    inputConcentration =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.1";
        CIAttributeDescription = "The spotlight size. The smaller the value, the more tightly focused the light beam.";
        CIAttributeDisplayName = Concentration;
        CIAttributeIdentity = 20;
        CIAttributeMin = "0.001";
        CIAttributeSliderMax = "1.5";
        CIAttributeSliderMin = "0.001";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputLightPointsAt =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[200 200 0]";
        CIAttributeDescription = "The x and y position that the spotlight points at.";
        CIAttributeDisplayName = "Light Points At";
        CIAttributeType = CIAttributeTypePosition3;
        CIUIParameterSet = CIUISetBasic;
    };
    inputLightPosition =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[400 600 150]";
        CIAttributeDescription = "The x and y position of the spotlight.";
        CIAttributeDisplayName = "Light Position";
        CIAttributeType = CIAttributeTypePosition3;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.182 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a starburst pattern. The output image is typically used as input to another filter";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Star Shine";
    CIAttributeFilterName = CIStarShineGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIStarShineGenerator";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The  x and y position to use as the center of the star.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0.8 0.6 1)";
        CIAttributeDescription = "The color to use for the outer shell of the circular star.";
        CIAttributeDisplayName = Color;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCrossAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.6";
        CIAttributeDescription = "The angle of the cross pattern.";
        CIAttributeDisplayName = "Cross Angle";
        CIAttributeIdentity = "0.6";
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCrossOpacity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "-2";
        CIAttributeDescription = "The opacity of the cross pattern.";
        CIAttributeDisplayName = "Cross Opacity";
        CIAttributeIdentity = "-2";
        CIAttributeMin = "-8";
        CIAttributeSliderMax = 0;
        CIAttributeSliderMin = "-8";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCrossScale =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 15;
        CIAttributeDescription = "The size of the cross pattern.";
        CIAttributeDisplayName = "Cross Scale";
        CIAttributeIdentity = 15;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCrossWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "2.5";
        CIAttributeDescription = "The width of the cross pattern.";
        CIAttributeDisplayName = "Cross Width";
        CIAttributeIdentity = "2.5";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = "0.5";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputEpsilon =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "-2";
        CIAttributeDescription = "The length of the cross spikes.";
        CIAttributeDisplayName = Epsilon;
        CIAttributeIdentity = "-2";
        CIAttributeMin = "-8";
        CIAttributeSliderMax = 0;
        CIAttributeSliderMin = "-8";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 50;
        CIAttributeDescription = "The radius of the star.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 50;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 300;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.193 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Rotates a source image by the specified angle in radians. The image is then scaled and cropped so that the rotated image fits the extent of the input image.";
    CIAttributeFilterCategories =     (
        CICategoryGeometryAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Straighten;
    CIAttributeFilterName = CIStraightenFilter;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIStraightenFilter";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "An angle.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.197 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Distorts an image by stretching and or cropping to fit a target size.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = CIStretchCrop;
    CIAttributeFilterName = CIStretchCrop;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIStretchCrop";
    inputCenterStretchAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.25";
        CIAttributeDescription = "Determine how much the center of the image is stretched if stretching is used. If value is 0 then the center of the image maintains the original aspect ratio.  If 1 then the image is stretched uniformly.";
        CIAttributeDisplayName = CenterStretchAmount;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCropAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.25";
        CIAttributeDescription = "Determines if and how much cropping should be used to achieve the target size. If value is 0 then only stretching is used.  If 1 then only cropping is used.";
        CIAttributeDisplayName = CropAmount;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSize =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[1280 720]";
        CIAttributeDescription = "The size in pixels of the output image.";
        CIAttributeDisplayName = Size;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.204 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a stripe pattern. You can control the color of the stripes, the spacing, and the contrast.";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Stripes;
    CIAttributeFilterName = CIStripesGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIStripesGenerator";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the stripe pattern.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor0 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "A color to use for the odd stripes.";
        CIAttributeDisplayName = "Color 1";
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor1 =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(0 0 0 1)";
        CIAttributeDescription = "A color to use for the even stripes.";
        CIAttributeDisplayName = "Color 2";
        CIUIParameterSet = CIUISetBasic;
    };
    inputSharpness =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 1;
        CIAttributeDescription = "The sharpness of the stripe pattern. The smaller the value, the more blurry the pattern. Values range from 0.0 to 1.0.";
        CIAttributeDisplayName = Sharpness;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 80;
        CIAttributeDescription = "The width of a stripe.";
        CIAttributeDisplayName = Width;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.220 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Generates a sun effect. You typically use the output of the sunbeams filter as input to a composite filter.";
    CIAttributeFilterCategories =     (
        CICategoryGenerator,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Sunbeams;
    CIAttributeFilterName = CISunbeamsGenerator;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISunbeamsGenerator";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The  x and y position to use as the center of the sunbeam pattern";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0.5 0 1)";
        CIAttributeDescription = "The color of the sun.";
        CIAttributeDisplayName = Color;
        CIUIParameterSet = CIUISetBasic;
    };
    inputMaxStriationRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "2.58";
        CIAttributeDescription = "The radius of the sunbeams.";
        CIAttributeDisplayName = "Maximum Striation Radius";
        CIAttributeIdentity = "2.58";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 10;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStriationContrast =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.375";
        CIAttributeDescription = "The contrast of the sunbeams. Higher values result in more contrast.";
        CIAttributeDisplayName = "Striation Contrast";
        CIAttributeIdentity = "1.375";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 5;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputStriationStrength =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The intensity of the sunbeams. Higher values result in more intensity.";
        CIAttributeDisplayName = "Striation Strength";
        CIAttributeIdentity = "0.5";
        CIAttributeMin = 0;
        CIAttributeSliderMax = 3;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputSunRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 40;
        CIAttributeDescription = "The radius of the sun.";
        CIAttributeDisplayName = "Sun Radius";
        CIAttributeIdentity = 40;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The duration of the effect.";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.256 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Transitions from one image to another by simulating a swiping action.";
    CIAttributeFilterCategories =     (
        CICategoryTransition,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Swipe;
    CIAttributeFilterName = CISwipeTransition;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CISwipeTransition";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle of the swipe.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 1 1 1)";
        CIAttributeDescription = "The color of the swipe.";
        CIAttributeDisplayName = Color;
        CIAttributeType = CIAttributeTypeOpaqueColor;
        CIUIParameterSet = CIUISetBasic;
    };
    inputExtent =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0 300 300]";
        CIAttributeDescription = "The extent of the effect.";
        CIAttributeDisplayName = Extent;
        CIAttributeType = CIAttributeTypeRectangle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputOpacity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The opacity of the swipe.";
        CIAttributeDisplayName = Opacity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The target image for a transition.";
        CIAttributeDisplayName = "Target Image";
        CIUIParameterSet = CIUISetBasic;
    };
    inputTime =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The parametric time of the transition. This value drives the transition from start (at time 0) to end (at time 1).";
        CIAttributeDisplayName = Time;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeTime;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The width of the swipe";
        CIAttributeDisplayName = Width;
        CIAttributeMin = "0.1";
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = "0.1";
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.263 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adapt the reference white point for an image.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Temperature and Tint";
    CIAttributeFilterName = CITemperatureAndTint;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CITemperatureAndTint";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputNeutral =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[6500 0]";
        CIAttributeDisplayName = Neutral;
        CIAttributeIdentity = "[6500 0]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    inputTargetNeutral =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[6500 0]";
        CIAttributeDisplayName = TargetNeutral;
        CIAttributeIdentity = "[6500 0]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.267 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjusts tone response of the R, G, and B channels of an image. The input points are five x,y values that are interpolated using a spline curve.  The curve is applied in a perceptual (gamma 2) version of the working space.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Tone Curve";
    CIAttributeFilterName = CIToneCurve;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIToneCurve";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint0 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0 0]";
        CIAttributeDisplayName = "Point 1";
        CIAttributeIdentity = "[0 0]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint1 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0.25 0.25]";
        CIAttributeDisplayName = "Point 2";
        CIAttributeIdentity = "[0.25 0.25]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint2 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0.5 0.5]";
        CIAttributeDisplayName = Point2;
        CIAttributeIdentity = "[0.5 0.5]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint3 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[0.75 0.75]";
        CIAttributeDisplayName = Point3;
        CIAttributeIdentity = "[0.75 0.75]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    inputPoint4 =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[1 1]";
        CIAttributeDisplayName = Point4;
        CIAttributeIdentity = "[1 1]";
        CIAttributeType = CIAttributeTypeOffset;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.279 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Creates a torus-shaped lens and distorts the portion of the image over which the lens is placed.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Torus Lens Distortion";
    CIAttributeFilterName = CITorusLensDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CITorusLensDistortion";
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the torus.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 160;
        CIAttributeDescription = "The outer radius of the torus.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 500;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRefraction =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "1.7";
        CIAttributeDescription = "The refraction of the glass.";
        CIAttributeDisplayName = Refraction;
        CIAttributeIdentity = 0;
        CIAttributeMin = "-5";
        CIAttributeSliderMax = 5;
        CIAttributeSliderMin = "-5";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 80;
        CIAttributeDescription = "The width of the ring.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.284 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Maps a triangular portion of image to a triangular area and then tiles the result.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Triangle Tile";
    CIAttributeFilterName = CITriangleTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CITriangleTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.294 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Produces a tiled image from a source image by applying a 12-way reflected symmetry.";
    CIAttributeFilterCategories =     (
        CICategoryTileEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Twelvefold Reflected Tile";
    CIAttributeFilterName = CITwelvefoldReflectedTile;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CITwelvefoldReflectedTile";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The angle (in degrees) of the tiled pattern.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "3.141592653589793";
        CIAttributeSliderMin = "-3.141592653589793";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputWidth =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 100;
        CIAttributeDescription = "The width of a tile.";
        CIAttributeDisplayName = Width;
        CIAttributeIdentity = 100;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 1;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.301 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Rotates pixels around a point to give a twirling effect. You can specify the number of rotations as well as the center and radius of the effect.";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Twirl Distortion";
    CIAttributeFilterName = CITwirlDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CITwirlDistortion";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "3.141592653589793";
        CIAttributeDescription = "The angle (in degrees) of the twirl. Values can be positive or negative.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "12.56637061435917";
        CIAttributeSliderMin = "-12.56637061435917";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 300;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 500;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.354 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Increases the contrast of the edges between pixels of different colors in an image.";
    CIAttributeFilterCategories =     (
        CICategorySharpen,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Unsharp Mask";
    CIAttributeFilterName = CIUnsharpMask;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIUnsharpMask";
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputIntensity =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "0.5";
        CIAttributeDescription = "The intensity of the effect. The larger the value, the more contrast in the affected area.";
        CIAttributeDisplayName = Intensity;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "2.5";
        CIAttributeDescription = "The radius around a given pixel to apply the unsharp mask. The larger the radius, the more of the image is affected.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 100;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.364 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjusts the saturation of an image while keeping pleasing skin tones.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = Vibrance;
    CIAttributeFilterName = CIVibrance;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIVibrance";
    inputAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 0;
        CIAttributeDescription = "The amount to adjust the saturation.";
        CIAttributeDisplayName = Amount;
        CIAttributeIdentity = 0;
        CIAttributeMax = 1;
        CIAttributeMin = "-1";
        CIAttributeSliderMax = 1;
        CIAttributeSliderMin = "-1";
        CIAttributeType = CIAttributeTypeScalar;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.369 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Rotates pixels around a point to simulate a vortex. You can specify the number of rotations as well the center and radius of the effect. ";
    CIAttributeFilterCategories =     (
        CICategoryDistortionEffect,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Vortex Distortion";
    CIAttributeFilterName = CIVortexDistortion;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIVortexDistortion";
    inputAngle =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = "56.54866776461628";
        CIAttributeDescription = "The angle (in degrees) of the vortex.";
        CIAttributeDisplayName = Angle;
        CIAttributeIdentity = 0;
        CIAttributeSliderMax = "94.24777960769379";
        CIAttributeSliderMin = "-94.24777960769379";
        CIAttributeType = CIAttributeTypeAngle;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the distortion.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    inputRadius =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 300;
        CIAttributeDescription = "The radius determines how many pixels are used to create the distortion. The larger the radius, wider the extent of the distortion.";
        CIAttributeDisplayName = Radius;
        CIAttributeIdentity = 300;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 800;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.379 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Adjusts the reference white point for an image and maps all colors in the source using the new reference.";
    CIAttributeFilterCategories =     (
        CICategoryColorAdjustment,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryInterlaced,
        CICategoryNonSquarePixels,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "White Point Adjust";
    CIAttributeFilterName = CIWhitePointAdjust;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIWhitePointAdjust";
    inputColor =     {
        CIAttributeClass = CIColor;
        CIAttributeDefault = "(1 0.9 0.8 1)";
        CIAttributeDescription = "A color to use as the white point.";
        CIAttributeDisplayName = Color;
        CIAttributeIdentity = "(1 1 1 1)";
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
2014-04-02 15:45:01.388 coreImage_sketchDebug[6550:303] {
    CIAttributeDescription = "Simulates the effect of zooming the camera while capturing the image.";
    CIAttributeFilterCategories =     (
        CICategoryBlur,
        CICategoryVideo,
        CICategoryStillImage,
        CICategoryBuiltIn
    );
    CIAttributeFilterDisplayName = "Zoom Blur";
    CIAttributeFilterName = CIZoomBlur;
    CIAttributeReferenceDocumentation = "http://developer.apple.com/cgi-bin/apple_ref.cgi?apple_ref=//apple_ref/doc/filter/ci/CIZoomBlur";
    inputAmount =     {
        CIAttributeClass = NSNumber;
        CIAttributeDefault = 20;
        CIAttributeDescription = "The zoom-in amount. Larger values result in more zooming in.";
        CIAttributeDisplayName = Amount;
        CIAttributeIdentity = 0;
        CIAttributeMin = 0;
        CIAttributeSliderMax = 200;
        CIAttributeSliderMin = 0;
        CIAttributeType = CIAttributeTypeDistance;
        CIUIParameterSet = CIUISetBasic;
    };
    inputCenter =     {
        CIAttributeClass = CIVector;
        CIAttributeDefault = "[150 150]";
        CIAttributeDescription = "The x and y position to use as the center of the effect.";
        CIAttributeDisplayName = Center;
        CIAttributeType = CIAttributeTypePosition;
        CIUIParameterSet = CIUISetBasic;
    };
    inputImage =     {
        CIAttributeClass = CIImage;
        CIAttributeDescription = "The image to use as an input image. For filters that also use a background image, this is the foreground image.";
        CIAttributeDisplayName = Image;
        CIUIParameterSet = CIUISetBasic;
    };
    outputImage =     {
        CIAttributeClass = CIImage;
    };
}
